# -*- coding: utf-8 -*-
"""01_horarios.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ao9MKC8krLcgjXgHLMxpwi_8UAzu3iQP

1.   Crear una función para crear un archivo de texto con la siguiente información: Código, Asignatura, Profesor, Horario.
2.   Crear una función para mostrar los profesores de un departamento determinado, recuerde que en el archivo de texto se conoce es el nombre de la asignatura y del profesor.
"""

import os

# Diccionario exclusivo para búsqueda de departamentos en pensum viejo y nuevo
DEPARTAMENTOS_ASIGNATURAS_PV = {
    "Matemáticas": ["ANÁLISIS MATEMÁTICO I", "GEOMETRÍA ANALÍTICA",
                    "ÁLGEBRA LINEAL", "ANÁLISIS MATEMÁTICO II",
                    "FUNCIONES VECTORIALES", "ECUACIONES DIFERENCIALES",
                    "MATEMÁTICAS APLICADAS"],
    "Computación": ["COMPUTACIÓN I", "COMPUTACIÓN II", "COMPUTACIÓN AVANZADA",
                    "FUNDAMENTOS DE PROGRAMACIÓN", "PROGRAMACIÓN DE APLICACIONES EN INGENIERÍA"],
    "Física": ["FISICA I", "FISICA II", "LABORATORIO I DE FISICA",
               "LABORATORIO II DE FISICA", "TERMODINÁMICA GENERAL",
               "FISICA MODERNA Y ONDAS"],
    "Idiomas Modernos": ["INGLES I", "INGLES II", "LENGUAJE Y COMUNICACION"],
    "Química": ["QUIMICA GENERAL I", "QUIMICA GENERAL I", "LAB. DE QUIMICA GENERAL"],
    "Humanidades": ["DEPORTE", "PROC. BASICOS DEL PENSAMIENTO", "INTROD. A LAS CIENCIAS HUMANAS",
                    "RAZ. VERBAL Y SOL DE PROBLEMAS", "INTROD. AL SERVICIO COMUNITARIO",
                    "CULTURA", "CREATIVIDAD E INVENTIVA", "LEGISLACION Y DEONTOLOGIA",
                    "METODOLOGIA DE INVESTIGACION", "CIENCIAS SOCIALES"],
    "Dibujo": ["DIBUJO I", "DIBUJO II"]
}

DEPARTAMENTOS_ASIGNATURAS_PN = {
    "Matemáticas": ["CÁLCULO DIFERENCIAL", "GEOMETRÍA ANALÍTICA",
                    "ÁLGEBRA LINEAL", "CÁLCULO INTEGRAL", "FUNCIONES VECTORIALES",
                    "ECUACIONES DIFERENCIALES", "MATEMÁTICAS APLICADAS"],
    "Computación": ["FUNDAMENTOS DE PROGRAMACIÓN",
                    "PROGRAMACIÓN DE APLICACIONES EN INGENIERÍA"],
    "Física": ["Física I", "Física II", "Mecánica Cuántica", "Termodinámica"],
    "Idiomas Modernos": ["Literatura Universal", "Poesía", "Novela", "Teatro"],
    "Química": [],
    "Humanidades": [],
    "Dibujo": []
}

# función para crear archivo "asignaturas.txt"
def guardar_asignatura():
    """Función para guardar datos de asignatura sin referencia a departamento"""
    print("\n--- Registrar Nueva Asignatura ---")

    codigo = input("Código: ")
    asignatura = input("Nombre de la asignatura: ")
    profesor = input("Profesor: ")
    horario = input("Horario: ")

    with open("asignaturas.txt", "a") as f:
        f.write(f"{codigo}|{asignatura}|{profesor}|{horario}\n")
    print("\n¡Asignatura registrada exitosamente!")

# función para buscar profesores del Dpto.
def buscar_profesores_por_depto():
    """Busca profesores filtrando por asignaturas del departamento"""
    if not os.path.exists("asignaturas.txt"):
        print("\nNo hay asignaturas registradas aún.")
        return

    print("\n--- Buscar Profesores por Departamento ---")
    print("Departamentos disponibles:")

    for i, depto in enumerate(DEPARTAMENTOS_ASIGNATURAS_PV.keys(), 1):
        print(f"{i}. {depto}")

    # Selección de departamento
    while True:
        try:
            opcion = int(input("\nSeleccione departamento (número): ")) - 1
            depto_seleccionado = list(DEPARTAMENTOS_ASIGNATURAS_PV.keys())[opcion]
            break
        except (ValueError, IndexError):
            print("Opción inválida. Intente nuevamente.")

    # Obtener asignaturas del departamento
    asignaturas_depto = DEPARTAMENTOS_ASIGNATURAS_PV[depto_seleccionado]
    profesores_encontrados = set()

    # Búsqueda en archivo de la asignatura en el Dpto y guardo el profesor
    with open("asignaturas.txt", "r") as f:
        for linea in f:
            datos = linea.strip().split("|")
            if len(datos) == 4:
                _, asignatura, profesor, _ = datos
                if asignatura in asignaturas_depto:
                    profesores_encontrados.add(profesor)

    # Mostrar resultados
    if profesores_encontrados:
        print(f"\nProfesores del departamento {depto_seleccionado}:")
        for i, profesor in enumerate(sorted(profesores_encontrados), 1):
            print(f"{i}. {profesor}")
    else:
        print(f"\nNo se encontraron profesores para {depto_seleccionado}")

def mostrar_menu():
    """Interfaz principal del sistema"""
    while True:
        print("\n--- Sistema de Gestión Académica ---")
        print("1. Registrar nueva asignatura")
        print("2. Buscar profesores por departamento")
        print("3. Salir")

        opcion = input("Seleccione opción: ")

        if opcion == "1":
            guardar_asignatura()
        elif opcion == "2":
            buscar_profesores_por_depto()
        elif opcion == "3":
            print("\nSaliendo del sistema...")
            break
        else:
            print("\nOpción no válida")

if __name__ == "__main__":
    mostrar_menu()

